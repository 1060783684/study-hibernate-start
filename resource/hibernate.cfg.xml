<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">



<hibernate-configuration>
    <session-factory>
        <!--hibernate标准配置-->
        <!--数据库驱动-->
        <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>

        <!--jdbc url-->
        <property name="hibernate.connection.url">jdbc:mysql://127.0.0.1:3306/test</property>

        <!--用户名-->
        <property name="hibernate.connection.username">root</property>

        <!--密码-->
        <property name="hibernate.connection.password">951357qaz</property>

        <!--生成哪种数据库的SQL语句,即数据库方言-->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>


        <!--hibernate附加配置-->
        <!--数据库连接池中连接的数量-->
        <property name="hibernate.connection.pool_saize">5</property>

        <!--是否在 JDBC 连接中使用自动提交,如果不写,默认不自动提交-->
        <property name="hibernate.connection.autocommit">false</property>

        <!--是否将hibernate生成的sql语句输出到控制台-->
        <property name="hibernate.show_sql">true</property>

        <!--输出到控制台的sql语句是否排版,一般与show_sql属性一起使用-->
        <property name="hibernate.format_sql">true</property>

        <!--每次hibernate操作数据库时都会加上这个值作为前缀,即数据库
            效果test.表名
            不好使...-->
        <!--<property name="hibernate.default_schema">test</property>-->

        <!--可以有create|update|create-drop|validate几种值
        　　　create:若表不存在,则hibernate帮助创建一张新的表,若表已存在,
                    则删除原有的表再创建一张新的表,每次操作都将整个数据库的表删了重创...
                    对于mysql数据库,创建表时使用MyISAM数据库引擎
                    这个语句和mysql5.7语法不兼容
             update:在原有的表的基础上操作,可以保留测试数据-->
        <!--<property name="hibernate.hbm2ddl.auto">update</property>-->

        <!--当session使用getCurrent方法创建时需要设置这个
        　　thread:操作本地事务
        　　jta:操作全局事务-->
        <property name="hibernate.current_session_context_class">thread</property>


        <!--以上的配置的"hibernate."前缀都可以省略-->

        <!--引入映射文件-->
        <mapping resource="User.hbm.xml"/>

        <!--引入映射类-->
        <mapping class="test.pojo.Pet"/>

        <mapping resource="Student.hbm.xml"/>

        <mapping class="test.pojo.Player"/>
    </session-factory>
</hibernate-configuration>